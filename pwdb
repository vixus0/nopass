#!/usr/bin/env python

import hashlib, argparse, os

try:
    import cPickle as pkl
except ImportError:
    import pickle as pkl

DEFAULT_DB = os.environ['HOME'] + "/.pwdb"

def is_exe(exe):
    for path in os.environ["PATH"].split(os.pathsep):
        f = os.path.join(path, exe)
        if os.path.isfile(f) and os.access(f, os.X_OK):
            return True

def argparser():
    ap = argparse.ArgumentParser(description='Simple password manager.')
    ap.add_argument('-f', '--file', help='Database file', default=DEFAULT_DB)

    sub = ap.add_subparsers(title='commands')

    add_parser = sub.add_parser('add', aliases=['a'], help='Add a new entry')
    add_parser.add_argument('entry', help='Entry name')
    add_parser.add_argument('-u', '--user', help='Username', required=True)
    add_parser.add_argument('-t', '--target', help='Website URL or program name', required=True)
    add_parser.add_argument('-w', '--win', help='xdotool search string for autotyping')
    add_parser.set_defaults(run=add)

    del_parser = sub.add_parser('del', aliases=['d'], help='Delete an entry')
    del_parser.add_argument('entry', help='Entry name')
    del_parser.set_defaults(run=delete)

    prn_parser = sub.add_parser('print', aliases=['p'], help='Print an entry to stdout')
    prn_parser.add_argument('entry', help='Entry name')
    prn_parser.add_argument('-n', '--name', help='Print the name', action='store_true')
    prn_parser.add_argument('-u', '--user', help='Print the username', action='store_true')
    prn_parser.add_argument('-t', '--target', help='Print the target', action='store_true')
    prn_parser.add_argument('-w', '--win', help='Print the xdotool search string', action='store_true')
    prn_parser.add_argument('-p', '--pass', help='Print the password as PLAINTEXT', action='store_true')
    prn_parser.set_defaults(run=prn)

    clp_parser = sub.add_parser('clip', aliases=['c'], help='Put stuff on clipboard')
    clp_parser.add_argument('entry', help='Entry name')
    clp_parser.add_argument('-u', '--user', help='Copy username', action='store_true')
    clp_parser.add_argument('-p', '--pass', help='Copy password', action='store_true')
    clp_parser.set_defaults(run=clip)

    xdo_parser = sub.add_parser('xdo', aliases=['x'], help='Autotyping with xdotool')
    xdo_parser.add_argument('-n', '--entry', help='Autofocus and autotype based on entry') 
    xdo_parser.set_defaults(run=xdo)

    return ap

def add(args):
    pass

def delete(args):
    pass

def prn(args):
    pass

def clip(args):
    pass

def xdo(args):
    pass

if __name__ == "__main__":

    ap = argparser()
    args = ap.parse_args()

    if 'run' in vars(args):
        args.run(args)
